.TH "put.c" 3 "Wed Sep 10 2014" "Version v0.6.0-beta" "protobuf-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
put.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'put\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBPut\fP (const char *host, int port, bool nonBlocking, int64_t clusterVersion, int64_t identity, \fBByteArray\fP hmacKey, \fBKineticKeyValue\fP *metadata)"
.br
.RI "\fIConnects to the specified Kinetic host/port and executes a Put to store an object on the Device\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBKineticPDU\fP \fBrequest\fP"
.br
.ti -1c
.RI "\fBKineticPDU\fP \fBresponse\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int Put (const char *host, intport, boolnonBlocking, int64_tclusterVersion, int64_tidentity, \fBByteArray\fPhmacKey, \fBKineticKeyValue\fP *metadata)"

.PP
Connects to the specified Kinetic host/port and executes a Put to store an object on the Device\&. 
.PP
\fBParameters:\fP
.RS 4
\fIhost\fP Host name or IP address to connect to 
.br
\fIport\fP Port to establish socket connection on 
.br
\fInonBlocking\fP Set to true for non-blocking or false for blocking I/O 
.br
\fIclusterVersion\fP Cluster version to use for the operation 
.br
\fIidentity\fP Identity to use for the operation (Must have ACL setup on Kinetic Device) 
.br
\fIhmacKey\fP Shared secret key used for the identity for HMAC calculation 
.br
\fImetadata\fP Key/value metadata for object to store\&. 'value' must specify the data to be stored\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Returns 0 upon succes, -1 or the Kinetic status code upon failure 
.RE
.PP

.PP
Definition at line 25 of file put\&.c\&.
.PP
References KINETIC_STATUS_SUCCESS, KineticClient_Connect(), KineticClient_CreateOperation(), KineticClient_Disconnect(), KineticClient_Init(), and KineticClient_Put()\&.
.SH "Variable Documentation"
.PP 
.SS "\fBKineticPDU\fP request"

.PP
Definition at line 23 of file put\&.c\&.
.SS "\fBKineticPDU\fP response"

.PP
Definition at line 23 of file put\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for protobuf-c from the source code\&.
