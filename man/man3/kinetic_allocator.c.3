.TH "kinetic_allocator.c" 3 "Mon Mar 2 2015" "Version v0.12.0-beta" "kinetic-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kinetic_allocator.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'kinetic_allocator\&.h'\fP
.br
\fC#include 'kinetic_logger\&.h'\fP
.br
\fC#include 'kinetic_memory\&.h'\fP
.br
\fC#include 'kinetic_resourcewaiter\&.h'\fP
.br
\fC#include 'kinetic_resourcewaiter_types\&.h'\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "KineticSession * \fBKineticAllocator_NewSession\fP (struct \fBbus\fP *b, \fBKineticSessionConfig\fP *config)"
.br
.ti -1c
.RI "void \fBKineticAllocator_FreeSession\fP (KineticSession *session)"
.br
.ti -1c
.RI "KineticConnection * \fBKineticAllocator_NewConnection\fP (struct \fBbus\fP *b, KineticSession *const session)"
.br
.ti -1c
.RI "void \fBKineticAllocator_FreeConnection\fP (KineticConnection *connection)"
.br
.ti -1c
.RI "\fBKineticResponse\fP * \fBKineticAllocator_NewKineticResponse\fP (size_t const valueLength)"
.br
.ti -1c
.RI "void \fBKineticAllocator_FreeKineticResponse\fP (\fBKineticResponse\fP *response)"
.br
.ti -1c
.RI "KineticOperation * \fBKineticAllocator_NewOperation\fP (KineticConnection *const connection)"
.br
.ti -1c
.RI "void \fBKineticAllocator_FreeOperation\fP (KineticOperation *operation)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "KineticSession* KineticAllocator_NewSession (struct \fBbus\fP *b, \fBKineticSessionConfig\fP *config)"

.PP
Definition at line 30 of file kinetic_allocator\&.c\&.
.PP
References ByteArray::data, KineticSessionConfig::hmacKey, KineticSessionConfig::host, KineticCalloc(), ByteArray::len, LOG0, and KineticSessionConfig::timeoutSeconds\&.
.SS "void KineticAllocator_FreeSession (KineticSession *session)"

.PP
Definition at line 52 of file kinetic_allocator\&.c\&.
.PP
References KineticFree()\&.
.SS "KineticConnection* KineticAllocator_NewConnection (struct \fBbus\fP *b, KineticSession *constsession)"

.PP
Definition at line 59 of file kinetic_allocator\&.c\&.
.PP
References KineticCalloc(), KineticResourceWaiter_Init(), and LOG0\&.
.SS "void KineticAllocator_FreeConnection (KineticConnection *connection)"

.PP
Definition at line 73 of file kinetic_allocator\&.c\&.
.PP
References KINETIC_ASSERT, KineticFree(), and KineticResourceWaiter_Destroy()\&.
.SS "\fBKineticResponse\fP* KineticAllocator_NewKineticResponse (size_t constvalueLength)"

.PP
Definition at line 80 of file kinetic_allocator\&.c\&.
.PP
References KineticCalloc(), and LOG0\&.
.SS "void KineticAllocator_FreeKineticResponse (\fBKineticResponse\fP *response)"

.PP
Definition at line 90 of file kinetic_allocator\&.c\&.
.PP
References KineticResponse::command, KINETIC_ASSERT, KineticFree(), and KineticResponse::proto\&.
.SS "KineticOperation* KineticAllocator_NewOperation (KineticConnection *constconnection)"

.PP
Definition at line 103 of file kinetic_allocator\&.c\&.
.PP
References KINETIC_ASSERT, KineticCalloc(), KineticFree(), KineticOperation_Init(), KineticRequest_Init(), LOG0, LOGF0, and LOGF3\&.
.SS "void KineticAllocator_FreeOperation (KineticOperation *operation)"

.PP
Definition at line 127 of file kinetic_allocator\&.c\&.
.PP
References KINETIC_ASSERT, KineticAllocator_FreeKineticResponse(), KineticFree(), and LOGF3\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for kinetic-c from the source code\&.
