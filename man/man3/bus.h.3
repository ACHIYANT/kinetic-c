.TH "bus.h" 3 "Tue Mar 3 2015" "Version v0.12.0-beta" "kinetic-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
bus.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'bus_types\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBbus_init\fP (\fBbus_config\fP *config, struct \fBbus_result\fP *res)"
.br
.ti -1c
.RI "bool \fBbus_send_request\fP (struct \fBbus\fP *b, \fBbus_user_msg\fP *msg)"
.br
.ti -1c
.RI "const char * \fBbus_log_event_str\fP (\fBlog_event_t\fP event)"
.br
.ti -1c
.RI "bool \fBbus_register_socket\fP (struct \fBbus\fP *b, \fBbus_socket_t\fP type, int fd, void *socket_udata)"
.br
.ti -1c
.RI "bool \fBbus_release_socket\fP (struct \fBbus\fP *b, int fd, void **socket_udata_out)"
.br
.ti -1c
.RI "bool \fBbus_shutdown\fP (struct \fBbus\fP *b)"
.br
.ti -1c
.RI "struct \fBlistener\fP * \fBbus_get_listener_for_socket\fP (struct \fBbus\fP *b, int fd)"
.br
.ti -1c
.RI "bool \fBbus_schedule_threadpool_task\fP (struct \fBbus\fP *b, struct \fBthreadpool_task\fP *task, size_t *backpressure)"
.br
.ti -1c
.RI "void \fBbus_lock_log\fP (struct \fBbus\fP *b)"
.br
.ti -1c
.RI "void \fBbus_unlock_log\fP (struct \fBbus\fP *b)"
.br
.ti -1c
.RI "void \fBbus_free\fP (struct \fBbus\fP *b)"
.br
.ti -1c
.RI "bool \fBbus_process_boxed_message\fP (struct \fBbus\fP *b, struct \fBboxed_msg\fP *box, size_t *backpressure)"
.br
.ti -1c
.RI "void \fBbus_backpressure_delay\fP (struct \fBbus\fP *b, size_t backpressure, uint8_t shift)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "bool bus_init (\fBbus_config\fP *config, struct \fBbus_result\fP *res)"

.PP
Definition at line 54 of file bus\&.c\&.
.PP
References attempt_to_increase_resource_limits(), bus_result::bus, BUS_INIT_ERROR_ALLOC_FAIL, BUS_INIT_ERROR_LISTENER_INIT_FAIL, BUS_INIT_ERROR_MISSING_SINK_CB, BUS_INIT_ERROR_MISSING_UNPACK_CB, BUS_INIT_ERROR_MUTEX_INIT_FAIL, BUS_INIT_ERROR_NULL, BUS_INIT_ERROR_PTHREAD_INIT_FAIL, BUS_INIT_ERROR_THREADPOOL_INIT_FAIL, BUS_LOG, BUS_LOG_SNPRINTF, bus_ssl_init(), bus_config::bus_udata, DEF_FD_SET_SIZE2, bus::error_cb, bus_config::error_cb, bus::fd_set, bus::fd_set_lock, bus::joined, bus::listener_count, bus_config::listener_count, listener_free(), listener_init(), bus::listeners, ListenerTask_MainLoop(), bus::log_cb, bus_config::log_cb, LOG_INITIALIZATION, bus::log_level, bus_config::log_level, bus::log_lock, noop_error_cb(), noop_log_cb(), set_defaults(), bus::sink_cb, bus_config::sink_cb, bus_result::status, bus::threadpool, bus_config::threadpool_cfg, threadpool_free(), threadpool_init(), threadpool::threads, bus::threads, bus::udata, bus::unexpected_msg_cb, bus_config::unexpected_msg_cb, bus::unpack_cb, bus_config::unpack_cb, yacht_free(), and yacht_init()\&.
.SS "bool bus_send_request (struct \fBbus\fP *b, \fBbus_user_msg\fP *msg)"

.PP
Definition at line 287 of file bus\&.c\&.
.PP
References box_msg(), BUS_LOG_SNPRINTF, bus_user_msg::fd, LOG_SENDING_REQUEST, send_do_blocking_send(), bus_user_msg::seq_id, and bus::udata\&.
.SS "const char* bus_log_event_str (\fBlog_event_t\fPevent)"

.PP
Definition at line 390 of file bus\&.c\&.
.PP
References LOG_INITIALIZATION, LOG_LISTENER, LOG_MEMORY, LOG_NEW_CLIENT, LOG_SENDER, LOG_SENDING_REQUEST, LOG_SHUTDOWN, and LOG_SOCKET_REGISTERED\&.
.SS "bool bus_register_socket (struct \fBbus\fP *b, \fBbus_socket_t\fPtype, intfd, void *socket_udata)"

.PP
Definition at line 405 of file bus\&.c\&.
.PP
References BUS_LOG, BUS_LOG_SNPRINTF, BUS_NO_SEQ_ID, BUS_NO_SSL, BUS_SOCKET_SSL, bus_ssl_connect(), connection_info::fd, bus::fd_set, bus::fd_set_lock, connection_info::largest_rd_seq_id_seen, connection_info::largest_wr_seq_id_seen, listener_add_socket(), listener_id_of_socket(), bus::listeners, LOG_SOCKET_REGISTERED, poll_on_completion(), connection_info::ssl, connection_info::type, bus::udata, connection_info::udata, and yacht_set()\&.
.SS "bool bus_release_socket (struct \fBbus\fP *b, intfd, void **socket_udata_out)"

.PP
Definition at line 474 of file bus\&.c\&.
.PP
References BUS_LOG_SNPRINTF, BUS_NO_SSL, bus_ssl_disconnect(), bus::fd_set, bus::fd_set_lock, listener_id_of_socket(), listener_remove_socket(), bus::listeners, LOG_SOCKET_REGISTERED, poll_on_completion(), connection_info::ssl, bus::udata, connection_info::udata, and yacht_remove()\&.
.SS "bool bus_shutdown (struct \fBbus\fP *b)"

.PP
Definition at line 541 of file bus\&.c\&.
.PP
References ATOMIC_BOOL_COMPARE_AND_SWAP, BUS_LOG, BUS_LOG_SNPRINTF, bus::fd_set, free_connection_cb(), bus::joined, bus::listener_count, listener_shutdown(), bus::listeners, LOG_SHUTDOWN, poll_on_completion(), bus::shutdown_state, SHUTDOWN_STATE_HALTED, SHUTDOWN_STATE_RUNNING, SHUTDOWN_STATE_SHUTTING_DOWN, bus::threads, bus::udata, and yacht_free()\&.
.SS "struct \fBlistener\fP* bus_get_listener_for_socket (struct \fBbus\fP *b, intfd)"

.PP
Definition at line 385 of file bus\&.c\&.
.PP
References listener_id_of_socket(), and bus::listeners\&.
.SS "bool bus_schedule_threadpool_task (struct \fBbus\fP *b, struct \fBthreadpool_task\fP *task, size_t *backpressure)"

.PP
Definition at line 516 of file bus\&.c\&.
.PP
References bus::threadpool, and threadpool_schedule()\&.
.SS "void bus_lock_log (struct \fBbus\fP *b)"

.PP
Definition at line 594 of file bus\&.c\&.
.PP
References bus::log_lock\&.
.SS "void bus_unlock_log (struct \fBbus\fP *b)"

.PP
Definition at line 598 of file bus\&.c\&.
.PP
References bus::log_lock\&.
.SS "void bus_free (struct \fBbus\fP *b)"

.PP
Definition at line 639 of file bus\&.c\&.
.PP
References BUS_LOG, BUS_LOG_SNPRINTF, bus_shutdown(), bus_ssl_ctx_free(), bus::fd_set_lock, bus::joined, limit, bus::listener_count, listener_free(), bus::listeners, bus::log_lock, LOG_SHUTDOWN, bus::shutdown_state, SHUTDOWN_STATE_HALTED, THREAD_SHUTDOWN_SECONDS, bus::threadpool, threadpool_free(), threadpool_shutdown(), bus::threads, and bus::udata\&.
.SS "bool bus_process_boxed_message (struct \fBbus\fP *b, struct \fBboxed_msg\fP *box, size_t *backpressure)"

.PP
Definition at line 620 of file bus\&.c\&.
.PP
References box_cleanup_cb(), box_execute_cb(), BUS_LOG_SNPRINTF, bus_schedule_threadpool_task(), BUS_SEND_UNDEFINED, LOG_MEMORY, boxed_msg::result, bus_msg_result_t::status, threadpool_task::task, and bus::udata\&.
.SS "void bus_backpressure_delay (struct \fBbus\fP *b, size_tbackpressure, uint8_tshift)"

.PP
Definition at line 583 of file bus\&.c\&.
.PP
References BUS_LOG_SNPRINTF, LOG_SENDER, and bus::udata\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for kinetic-c from the source code\&.
