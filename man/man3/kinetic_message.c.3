.TH "kinetic_message.c" 3 "Tue Dec 9 2014" "Version v0.9.0" "kinetic-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kinetic_message.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'kinetic_message\&.h'\fP
.br
\fC#include 'kinetic_logger\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCONFIG_FIELD_BYTE_BUFFER\fP(_name, _field, _entry)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBKineticMessage_Init\fP (\fBKineticMessage\fP *const message)"
.br
.ti -1c
.RI "void \fBKineticMessage_ConfigureKeyValue\fP (\fBKineticMessage\fP *const message, const \fBKineticEntry\fP *entry)"
.br
.ti -1c
.RI "void \fBKineticMessage_ConfigureKeyRange\fP (\fBKineticMessage\fP *const message, const \fBKineticKeyRange\fP *range)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define CONFIG_FIELD_BYTE_BUFFER(_name, _field, _entry)"
\fBValue:\fP
.PP
.nf
{ \
    if ((_entry)->_name\&.array\&.data != NULL \
        && (_entry)->_name\&.array\&.len > 0 \
        && (_entry)->_name\&.bytesUsed > 0 \
        && (_entry)->_name\&.bytesUsed <= (_entry)->_name\&.array\&.len) \
    { \
        (_field)\&._name\&.data = (_entry)->_name\&.array\&.data; \
        (_field)\&._name\&.len = (_entry)->_name\&.bytesUsed; \
        (_field)\&.has_ ## _name = true; \
    } \
    else { \
        (_field)\&.has_ ## _name = false; \
    } \
}
.fi
.PP
Definition at line 31 of file kinetic_message\&.c\&.
.SH "Function Documentation"
.PP 
.SS "void KineticMessage_Init (\fBKineticMessage\fP *constmessage)"

.PP
Definition at line 24 of file kinetic_message\&.c\&.
.PP
References KINETIC_MESSAGE_INIT\&.
.SS "void KineticMessage_ConfigureKeyValue (\fBKineticMessage\fP *constmessage, const \fBKineticEntry\fP *entry)"

.PP
Definition at line 46 of file kinetic_message\&.c\&.
.PP
References KineticEntry::algorithm, KineticMessage::body, KineticMessage::command, CONFIG_FIELD_BYTE_BUFFER, KineticEntry::force, KineticMessage::keyValue, KineticProto_Command_Algorithm_from_KineticAlgorithm(), KineticProto_Command_Synchronization_from_KineticSynchronization(), KineticEntry::metadataOnly, and KineticEntry::synchronization\&.
.SS "void KineticMessage_ConfigureKeyRange (\fBKineticMessage\fP *constmessage, const \fBKineticKeyRange\fP *range)"

.PP
Definition at line 87 of file kinetic_message\&.c\&.
.PP
References ByteBuffer::array, KineticMessage::body, ByteBuffer::bytesUsed, KineticMessage::command, ByteArray::data, KineticKeyRange::endKey, KineticKeyRange::endKeyInclusive, KineticMessage::keyRange, ByteArray::len, KineticKeyRange::maxReturned, KineticKeyRange::reverse, KineticKeyRange::startKey, and KineticKeyRange::startKeyInclusive\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for kinetic-c from the source code\&.
