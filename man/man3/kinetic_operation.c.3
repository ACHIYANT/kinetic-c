.TH "kinetic_operation.c" 3 "Fri Mar 13 2015" "Version v0.12.0" "kinetic-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kinetic_operation.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'kinetic_operation\&.h'\fP
.br
\fC#include 'kinetic_controller\&.h'\fP
.br
\fC#include 'kinetic_session\&.h'\fP
.br
\fC#include 'kinetic_message\&.h'\fP
.br
\fC#include 'kinetic_bus\&.h'\fP
.br
\fC#include 'kinetic_response\&.h'\fP
.br
\fC#include 'kinetic_device_info\&.h'\fP
.br
\fC#include 'kinetic_allocator\&.h'\fP
.br
\fC#include 'kinetic_logger\&.h'\fP
.br
\fC#include 'kinetic_request\&.h'\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <sys/time\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include 'kinetic_acl\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBKineticOperation_ValidateOperation\fP (KineticOperation *op)"
.br
.ti -1c
.RI "static \fBKineticStatus\fP \fBsend_request_in_lock\fP (KineticOperation *const op)"
.br
.ti -1c
.RI "\fBKineticStatus\fP \fBKineticOperation_SendRequest\fP (KineticOperation *const op)"
.br
.ti -1c
.RI "static void \fBlog_request_seq_id\fP (int fd, int64_t seq_id, \fBKineticMessageType\fP mt)"
.br
.ti -1c
.RI "\fBKineticStatus\fP \fBKineticOperation_GetStatus\fP (const KineticOperation *const op)"
.br
.ti -1c
.RI "void \fBKineticOperation_Complete\fP (KineticOperation *op, \fBKineticStatus\fP status)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void KineticOperation_ValidateOperation (KineticOperation *op)"

.PP
Definition at line 43 of file kinetic_operation\&.c\&.
.PP
References KINETIC_ASSERT\&.
.SS "static \fBKineticStatus\fP send_request_in_lock (KineticOperation *constop)\fC [static]\fP"

.PP
Definition at line 90 of file kinetic_operation\&.c\&.
.PP
References KINETIC_ASSERT, KINETIC_REQUEST_PACK_FAILURE, KINETIC_SEQUENCE_NOT_YET_BOUND, KINETIC_STATUS_MEMORY_ERROR, KINETIC_STATUS_REQUEST_REJECTED, KINETIC_STATUS_SUCCESS, KineticCountingSemaphore_Give(), KineticCountingSemaphore_Take(), KineticRequest_PackCommand(), KineticRequest_PackMessage(), KineticRequest_PopulateAuthentication(), KineticRequest_SendRequest(), KineticSession_GetNextSequenceCount(), log_request_seq_id(), LOGF0, and LOGF3\&.
.SS "\fBKineticStatus\fP KineticOperation_SendRequest (KineticOperation *constop)"

.PP
Definition at line 55 of file kinetic_operation\&.c\&.
.PP
References KINETIC_STATUS_CONNECTION_ERROR, KineticOperation_ValidateOperation(), KineticRequest_LockSend(), KineticRequest_UnlockSend(), and send_request_in_lock()\&.
.SS "static void log_request_seq_id (intfd, int64_tseq_id, \fBKineticMessageType\fPmt)\fC [static]\fP"

.PP
Definition at line 68 of file kinetic_operation\&.c\&.
.PP
References LOGF2\&.
.SS "\fBKineticStatus\fP KineticOperation_GetStatus (const KineticOperation *constop)"

.PP
Definition at line 146 of file kinetic_operation\&.c\&.
.PP
References KINETIC_STATUS_INVALID, and KineticResponse_GetStatus()\&.
.SS "void KineticOperation_Complete (KineticOperation *op, \fBKineticStatus\fPstatus)"

.PP
Definition at line 155 of file kinetic_operation\&.c\&.
.PP
References KINETIC_ASSERT, KineticAllocator_FreeOperation(), KineticCountingSemaphore_Give(), and KineticCompletionData::status\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for kinetic-c from the source code\&.
