.TH "kinetic_logger.c" 3 "Fri Aug 8 2014" "Version v0.4.2" "protobuf-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kinetic_logger.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'kinetic_logger\&.h'\fP
.br
\fC#include 'kinetic_types\&.h'\fP
.br
\fC#include 'kinetic_proto\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBLOG_PROTO_INIT\fP()"
.br
.ti -1c
.RI "#define \fBLOG_PROTO_LEVEL_START\fP(name)"
.br
.ti -1c
.RI "#define \fBLOG_PROTO_LEVEL_END\fP()"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBKineticLogger_Init\fP (const char *logFile)"
.br
.ti -1c
.RI "void \fBKineticLogger_Log\fP (const char *message)"
.br
.ti -1c
.RI "int \fBKineticLogger_LogPrintf\fP (const char *format,\&.\&.\&.)"
.br
.ti -1c
.RI "void \fBKineticLogger_LogHeader\fP (const \fBKineticPDUHeader\fP *header)"
.br
.ti -1c
.RI "void \fBKineticLogger_LogProtobuf\fP (const \fBKineticProto\fP *proto)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "bool \fBLogToConsole\fP = true"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define LOG_PROTO_INIT()"
\fBValue:\fP
.PP
.nf
unsigned int _i; \
    char _indent[32] = "  "; \
    const char* _str_true = "true"; \
    const char* _str_false = "false";
.fi
.PP
Definition at line 99 of file kinetic_logger\&.c\&.
.SS "#define LOG_PROTO_LEVEL_START(name)"
\fBValue:\fP
.PP
.nf
LOGF("%s" name " {", _indent); \
    strcat(_indent, "  ");
.fi
.PP
Definition at line 105 of file kinetic_logger\&.c\&.
.SS "#define LOG_PROTO_LEVEL_END()"
\fBValue:\fP
.PP
.nf
_indent[strlen(_indent) - 2] = '\0'; \\
    LOGF("%s}", _indent);
.fi
.PP
Definition at line 109 of file kinetic_logger\&.c\&.
.SH "Function Documentation"
.PP 
.SS "void KineticLogger_Init (const char *logFile)"

.PP
Definition at line 30 of file kinetic_logger\&.c\&.
.PP
References LogToConsole\&.
.SS "void KineticLogger_Log (const char *message)"

.PP
Definition at line 51 of file kinetic_logger\&.c\&.
.PP
References LogToConsole\&.
.SS "int KineticLogger_LogPrintf (const char *format, \&.\&.\&.)"

.PP
Definition at line 73 of file kinetic_logger\&.c\&.
.PP
References KineticLogger_Log()\&.
.SS "void KineticLogger_LogHeader (const \fBKineticPDUHeader\fP *header)"

.PP
Definition at line 91 of file kinetic_logger\&.c\&.
.PP
References LOG, and LOGF\&.
.SS "void KineticLogger_LogProtobuf (const \fBKineticProto\fP *proto)"

.PP
Definition at line 113 of file kinetic_logger\&.c\&.
.PP
References KineticProto_message_type_descriptor, KineticProto_status_status_code_descriptor, LOG, LOG_PROTO_INIT, LOG_PROTO_LEVEL_END, LOG_PROTO_LEVEL_START, and LOGF\&.
.SH "Variable Documentation"
.PP 
.SS "bool LogToConsole = true"

.PP
Definition at line 28 of file kinetic_logger\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for protobuf-c from the source code\&.
