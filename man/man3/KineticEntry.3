.TH "KineticEntry" 3 "Mon Mar 2 2015" "Version v0.12.0-beta" "kinetic-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KineticEntry \- 
.PP
Kinetic object instance\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <kinetic_types\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "\fBByteBuffer\fP \fBkey\fP"
.br
.RI "\fIKey associated with the object stored on disk\&. \fP"
.ti -1c
.RI "\fBByteBuffer\fP \fBvalue\fP"
.br
.RI "\fIValue data associated with the key\&. \fP"
.ti -1c
.RI "\fBByteBuffer\fP \fBdbVersion\fP"
.br
.RI "\fICurrent version of the entry (optional) \fP"
.ti -1c
.RI "\fBByteBuffer\fP \fBtag\fP"
.br
.RI "\fIGenerated authentication hash per the specified \fCalgorithm\fP \fP"
.ti -1c
.RI "\fBKineticAlgorithm\fP \fBalgorithm\fP"
.br
.RI "\fIAlgorithm used to generate the specified \fCtag\fP \fP"
.ti -1c
.RI "\fBByteBuffer\fP \fBnewVersion\fP"
.br
.RI "\fINew version for the object to assume once written to disk (optional) \fP"
.ti -1c
.RI "bool \fBmetadataOnly\fP"
.br
.RI "\fIIf set for a GET request, will return only the metadata for the specified object (\fCvalue\fP will not be retrieved) \fP"
.ti -1c
.RI "bool \fBforce\fP"
.br
.RI "\fIIf set for a GET/DELETE request, will override \fCversion\fP checking\&. \fP"
.ti -1c
.RI "bool \fBcomputeTag\fP"
.br
.RI "\fIIf set and an algorithm is specified, the tag will be populated with the calculated hash for integrity checking\&. \fP"
.ti -1c
.RI "\fBKineticSynchronization\fP \fBsynchronization\fP"
.br
.RI "\fISynchronization method to use for PUT/DELETE requests\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Kinetic object instance\&. 

The \fBByteBuffer\fP attributes must be allocated and freed by the client, if used\&. 
.PP
Definition at line 241 of file kinetic_types\&.h\&.
.SH "Field Documentation"
.PP 
.SS "\fBByteBuffer\fP KineticEntry::key"

.PP
Key associated with the object stored on disk\&. 
.PP
Definition at line 242 of file kinetic_types\&.h\&.
.SS "\fBByteBuffer\fP KineticEntry::value"

.PP
Value data associated with the key\&. 
.PP
Definition at line 243 of file kinetic_types\&.h\&.
.SS "\fBByteBuffer\fP KineticEntry::dbVersion"

.PP
Current version of the entry (optional) 
.PP
Definition at line 246 of file kinetic_types\&.h\&.
.SS "\fBByteBuffer\fP KineticEntry::tag"

.PP
Generated authentication hash per the specified \fCalgorithm\fP 
.PP
Definition at line 247 of file kinetic_types\&.h\&.
.SS "\fBKineticAlgorithm\fP KineticEntry::algorithm"

.PP
Algorithm used to generate the specified \fCtag\fP 
.PP
Definition at line 248 of file kinetic_types\&.h\&.
.SS "\fBByteBuffer\fP KineticEntry::newVersion"

.PP
New version for the object to assume once written to disk (optional) 
.PP
Definition at line 251 of file kinetic_types\&.h\&.
.SS "bool KineticEntry::metadataOnly"

.PP
If set for a GET request, will return only the metadata for the specified object (\fCvalue\fP will not be retrieved) 
.PP
Definition at line 252 of file kinetic_types\&.h\&.
.SS "bool KineticEntry::force"

.PP
If set for a GET/DELETE request, will override \fCversion\fP checking\&. 
.PP
Definition at line 253 of file kinetic_types\&.h\&.
.SS "bool KineticEntry::computeTag"

.PP
If set and an algorithm is specified, the tag will be populated with the calculated hash for integrity checking\&. 
.PP
Definition at line 254 of file kinetic_types\&.h\&.
.SS "\fBKineticSynchronization\fP KineticEntry::synchronization"

.PP
Synchronization method to use for PUT/DELETE requests\&. 
.PP
Definition at line 255 of file kinetic_types\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for kinetic-c from the source code\&.
