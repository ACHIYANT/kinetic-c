.TH "send.c" 3 "Fri Mar 13 2015" "Version v0.12.0" "kinetic-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
send.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <sys/time\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include 'bus\&.h'\fP
.br
\fC#include 'bus_poll\&.h'\fP
.br
\fC#include 'bus_types\&.h'\fP
.br
\fC#include 'bus_internal_types\&.h'\fP
.br
\fC#include 'listener\&.h'\fP
.br
\fC#include 'syscall\&.h'\fP
.br
\fC#include 'util\&.h'\fP
.br
\fC#include 'atomic\&.h'\fP
.br
\fC#include 'yacht\&.h'\fP
.br
\fC#include 'send_helper\&.h'\fP
.br
\fC#include 'send_internal\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static bool \fBattempt_to_enqueue_HOLD_message_to_listener\fP (struct \fBbus\fP *b, int fd, int64_t seq_id, int16_t timeout_sec)"
.br
.ti -1c
.RI "bool \fBSend_DoBlockingSend\fP (\fBbus\fP *b, \fBboxed_msg\fP *box)"
.br
.RI "\fIDo a blocking send\&. \fP"
.ti -1c
.RI "void \fBSend_HandleFailure\fP (struct \fBbus\fP *b, \fBboxed_msg\fP *box, \fBbus_send_status_t\fP status)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "static bool attempt_to_enqueue_HOLD_message_to_listener (struct \fBbus\fP *b, intfd, int64_tseq_id, int16_ttimeout_sec)\fC [static]\fP"

.PP
Definition at line 184 of file send\&.c\&.
.PP
References Bus_GetListenerForSocket(), BUS_LOG_SNPRINTF, BusPoll_OnCompletion(), Listener_HoldResponse(), LOG_SENDER, SEND_NOTIFY_LISTENER_RETRIES, SEND_NOTIFY_LISTENER_RETRY_DELAY, syscall_poll(), and bus::udata\&.
.SS "bool Send_DoBlockingSend (struct \fBbus\fP *b, \fBboxed_msg\fP *box)"

.PP
Do a blocking send\&. Returning true indicates that the message has been queued up for delivery, but the request or response may still fail\&. Those errors are handled by giving an error status code to the callback\&. Returning false means that the send was rejected outright, and the callback-based error handling will not be used\&. 
.PP
Definition at line 59 of file send\&.c\&.
.PP
References attempt_to_enqueue_HOLD_message_to_listener(), BUS_LOG_SNPRINTF, BUS_SEND_TX_FAILURE, BUS_SEND_TX_TIMEOUT, BUS_SEND_UNREGISTERED_SOCKET, boxed_msg::fd, LOG_SENDER, boxed_msg::out_msg, boxed_msg::out_msg_size, boxed_msg::out_sent_size, boxed_msg::out_seq_id, Send_HandleFailure(), SendHelper_HandleWrite(), SHHW_DONE, SHHW_ERROR, SHHW_OK, syscall_poll(), boxed_msg::timeout_sec, boxed_msg::tv_send_start, bus::udata, and Util_Timestamp()\&.
.SS "void Send_HandleFailure (struct \fBbus\fP *b, \fBboxed_msg\fP *box, \fBbus_send_status_t\fPstatus)"

.PP
Definition at line 208 of file send\&.c\&.
.PP
References BUS_ASSERT, Bus_BackpressureDelay(), BUS_LOG_SNPRINTF, Bus_ProcessBoxedMessage(), BUS_SEND_UNDEFINED, boxed_msg::fd, LISTENER_EXPECT_BACKPRESSURE_SHIFT, LOG_SENDER, boxed_msg::out_seq_id, boxed_msg::result, SEND_NOTIFY_LISTENER_RETRY_DELAY, bus_msg_result_t::status, syscall_poll(), and bus::udata\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for kinetic-c from the source code\&.
