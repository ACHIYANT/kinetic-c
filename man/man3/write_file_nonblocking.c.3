.TH "write_file_nonblocking.c" 3 "Fri Mar 13 2015" "Version v0.12.0" "kinetic-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
write_file_nonblocking.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'kinetic_client\&.h'\fP
.br
\fC#include 'kinetic_types\&.h'\fP
.br
\fC#include 'byte_array\&.h'\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <getopt\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <sys/param\&.h>\fP
.br
\fC#include <sys/stat\&.h>\fP
.br
\fC#include <sys/file\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBREPORT_ERRNO\fP(en, msg)   if(en != 0){errno = en; perror(msg);}"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "FileTransferProgress * \fBstart_file_transfer\fP (KineticSession *session, char const *const filename, uint64_t keyPrefix, uint32_t maxOverlappedChunks)"
.br
.ti -1c
.RI "\fBKineticStatus\fP \fBwait_for_put_finish\fP (FileTransferProgress *const transfer)"
.br
.ti -1c
.RI "static int \fBput_chunk_of_file\fP (FileTransferProgress *transfer)"
.br
.ti -1c
.RI "static void \fBput_chunk_of_file_finished\fP (\fBKineticCompletionData\fP *kinetic_data, void *client_data)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char **argv)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define REPORT_ERRNO(en, msg)   if(en != 0){errno = en; perror(msg);}"

.PP
Definition at line 32 of file write_file_nonblocking\&.c\&.
.SH "Function Documentation"
.PP 
.SS "FileTransferProgress * start_file_transfer (KineticSession *session, char const *constfilename, uint64_tkeyPrefix, uint32_tmaxOverlappedChunks)"

.PP
Definition at line 194 of file write_file_nonblocking\&.c\&.
.PP
References put_chunk_of_file()\&.
.SS "\fBKineticStatus\fP wait_for_put_finish (FileTransferProgress *consttransfer)"

.PP
Definition at line 215 of file write_file_nonblocking\&.c\&.
.SS "static int put_chunk_of_file (FileTransferProgress *transfer)\fC [static]\fP"

.PP
Definition at line 121 of file write_file_nonblocking\&.c\&.
.PP
References ByteBuffer_Create(), ByteBuffer_CreateAndAppend(), ByteBuffer_CreateAndAppendFormattedCString(), KINETIC_ALGORITHM_SHA1, Kinetic_GetStatusDescription(), KINETIC_STATUS_SUCCESS, KINETIC_SYNCHRONIZATION_WRITETHROUGH, KineticClient_Put(), and REPORT_ERRNO\&.
.SS "static void put_chunk_of_file_finished (\fBKineticCompletionData\fP *kinetic_data, void *client_data)\fC [static]\fP"

.PP
Definition at line 166 of file write_file_nonblocking\&.c\&.
.PP
References Kinetic_GetStatusDescription(), KINETIC_STATUS_NOT_ATTEMPTED, KINETIC_STATUS_SUCCESS, put_chunk_of_file(), and KineticCompletionData::status\&.
.SS "int main (intargc, char **argv)"

.PP
Definition at line 69 of file write_file_nonblocking\&.c\&.
.PP
References ByteArray_CreateWithCString(), KineticSessionConfig::host, Kinetic_GetStatusDescription(), KINETIC_PORT, KINETIC_STATUS_SUCCESS, KineticClient_CreateSession(), KineticClient_DestroySession(), KineticClient_Init(), KineticClient_Shutdown(), KineticClientConfig::logFile, start_file_transfer(), and wait_for_put_finish()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for kinetic-c from the source code\&.
