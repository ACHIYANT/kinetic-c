.TH "kinetic_pdu.h" 3 "Wed Oct 15 2014" "Version v0.7.0" "protobuf-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kinetic_pdu.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'kinetic_types_internal\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBKineticPDU_Init\fP (KineticPDU *const pdu, \fBKineticConnection\fP *const connection)"
.br
.ti -1c
.RI "void \fBKineticPDU_AttachEntry\fP (KineticPDU *const pdu, \fBKineticEntry\fP *const entry)"
.br
.ti -1c
.RI "\fBKineticStatus\fP \fBKineticPDU_Send\fP (KineticPDU *request)"
.br
.ti -1c
.RI "\fBKineticStatus\fP \fBKineticPDU_Receive\fP (KineticPDU *response)"
.br
.ti -1c
.RI "\fBKineticStatus\fP \fBKineticPDU_GetStatus\fP (KineticPDU *pdu)"
.br
.ti -1c
.RI "KineticProto_KeyValue * \fBKineticPDU_GetKeyValue\fP (KineticPDU *pdu)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void KineticPDU_Init (KineticPDU *constpdu, \fBKineticConnection\fP *constconnection)"

.PP
Definition at line 29 of file kinetic_pdu\&.c\&.
.PP
References KINETIC_PDU_INIT\&.
.SS "void KineticPDU_AttachEntry (KineticPDU *constpdu, \fBKineticEntry\fP *constentry)"

.PP
Definition at line 35 of file kinetic_pdu\&.c\&.
.SS "\fBKineticStatus\fP KineticPDU_Send (KineticPDU *request)"

.PP
Definition at line 42 of file kinetic_pdu\&.c\&.
.PP
References ByteBuffer::array, ByteBuffer_Create(), ByteBuffer::bytesUsed, ByteArray::data, KINETIC_PROTO_SECURITY_ACL_HMACALGORITHM_HmacSHA1, KINETIC_STATUS_INVALID, KINETIC_STATUS_SUCCESS, KineticHMAC_Init(), KineticHMAC_Populate(), KineticLogger_LogHeader(), KineticLogger_LogProtobuf(), KineticNBO_FromHostU32(), KineticPDUHeader, KineticProto__get_packed_size(), KineticSocket_Write(), KineticSocket_WriteProtobuf(), ByteArray::len, LOG, and LOGF\&.
.SS "\fBKineticStatus\fP KineticPDU_Receive (KineticPDU *response)"

.PP
Definition at line 108 of file kinetic_pdu\&.c\&.
.PP
References ByteBuffer::array, ByteBuffer_Create(), KineticMessage::command, KINETIC_PROTO_STATUS_STATUS_CODE_DATA_ERROR, KINETIC_STATUS_DATA_ERROR, KINETIC_STATUS_SUCCESS, KineticHMAC_Validate(), KineticLogger_LogHeader(), KineticLogger_LogProtobuf(), KineticNBO_ToHostU32(), KineticPDU_GetStatus(), KineticPDUHeader, KineticSocket_Read(), KineticSocket_ReadProtobuf(), ByteArray::len, LOG, LOGF, KineticMessage::proto, and KineticMessage::status\&.
.SS "\fBKineticStatus\fP KineticPDU_GetStatus (KineticPDU *pdu)"

.PP
Definition at line 200 of file kinetic_pdu\&.c\&.
.PP
References KINETIC_STATUS_INVALID, and KineticProtoStatusCode_to_KineticStatus()\&.
.SS "KineticProto_KeyValue* KineticPDU_GetKeyValue (KineticPDU *pdu)"

.PP
Definition at line 217 of file kinetic_pdu\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for protobuf-c from the source code\&.
