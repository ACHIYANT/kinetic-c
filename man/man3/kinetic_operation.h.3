.TH "kinetic_operation.h" 3 "Fri Mar 13 2015" "Version v0.12.0" "kinetic-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kinetic_operation.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'kinetic_types_internal\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBKineticOperation_ValidateOperation\fP (KineticOperation *op)"
.br
.ti -1c
.RI "\fBKineticStatus\fP \fBKineticOperation_SendRequest\fP (KineticOperation *const op)"
.br
.ti -1c
.RI "\fBKineticStatus\fP \fBKineticOperation_GetStatus\fP (const KineticOperation *const op)"
.br
.ti -1c
.RI "void \fBKineticOperation_Complete\fP (KineticOperation *op, \fBKineticStatus\fP status)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void KineticOperation_ValidateOperation (KineticOperation *op)"

.PP
Definition at line 43 of file kinetic_operation\&.c\&.
.PP
References KINETIC_ASSERT\&.
.SS "\fBKineticStatus\fP KineticOperation_SendRequest (KineticOperation *constop)"

.PP
Definition at line 55 of file kinetic_operation\&.c\&.
.PP
References KINETIC_STATUS_CONNECTION_ERROR, KineticOperation_ValidateOperation(), KineticRequest_LockSend(), KineticRequest_UnlockSend(), and send_request_in_lock()\&.
.SS "\fBKineticStatus\fP KineticOperation_GetStatus (const KineticOperation *constop)"

.PP
Definition at line 146 of file kinetic_operation\&.c\&.
.PP
References KINETIC_STATUS_INVALID, and KineticResponse_GetStatus()\&.
.SS "void KineticOperation_Complete (KineticOperation *op, \fBKineticStatus\fPstatus)"

.PP
Definition at line 155 of file kinetic_operation\&.c\&.
.PP
References KINETIC_ASSERT, KineticAllocator_FreeOperation(), KineticCountingSemaphore_Give(), and KineticCompletionData::status\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for kinetic-c from the source code\&.
