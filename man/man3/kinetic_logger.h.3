.TH "kinetic_logger.h" 3 "Wed Sep 10 2014" "Version v0.6.0-beta" "protobuf-c" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kinetic_logger.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'kinetic_types_internal\&.h'\fP
.br
\fC#include 'kinetic_proto\&.h'\fP
.br
\fC#include <stdarg\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBKINETIC_LOG_FILE\fP   'kinetic\&.log'"
.br
.ti -1c
.RI "#define \fBLOG\fP(message)   \fBKineticLogger_Log\fP(message)"
.br
.ti -1c
.RI "#define \fBLOGF\fP(message,\&.\&.\&.)   \fBKineticLogger_LogPrintf\fP(message, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBLOG_LOCATION\fP   \fBKineticLogger_LogPrintf\fP('@ %s:%s:%d', __func__, __FILE__, __LINE__)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBKineticLogger_Init\fP (const char *logFile)"
.br
.ti -1c
.RI "void \fBKineticLogger_Close\fP (void)"
.br
.ti -1c
.RI "void \fBKineticLogger_Log\fP (const char *message)"
.br
.ti -1c
.RI "int \fBKineticLogger_LogPrintf\fP (const char *format,\&.\&.\&.)"
.br
.ti -1c
.RI "void \fBKineticLogger_LogHeader\fP (const \fBKineticPDUHeader\fP *header)"
.br
.ti -1c
.RI "void \fBKineticLogger_LogProtobuf\fP (const \fBKineticProto\fP *proto)"
.br
.ti -1c
.RI "void \fBKineticLogger_LogStatus\fP (KineticProto_Status *status)"
.br
.ti -1c
.RI "void \fBKineticLogger_LogByteArray\fP (const char *title, \fBByteArray\fP bytes)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define KINETIC_LOG_FILE   'kinetic\&.log'"

.PP
Definition at line 28 of file kinetic_logger\&.h\&.
.SS "#define LOG(message)   \fBKineticLogger_Log\fP(message)"

.PP
Definition at line 39 of file kinetic_logger\&.h\&.
.SS "#define LOGF(message, \&.\&.\&.)   \fBKineticLogger_LogPrintf\fP(message, __VA_ARGS__)"

.PP
Definition at line 40 of file kinetic_logger\&.h\&.
.SS "#define LOG_LOCATION   \fBKineticLogger_LogPrintf\fP('@ %s:%s:%d', __func__, __FILE__, __LINE__)"

.PP
Definition at line 41 of file kinetic_logger\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void KineticLogger_Init (const char *logFile)"

.PP
Definition at line 30 of file kinetic_logger\&.c\&.
.PP
References FileDesc, and LogToConsole\&.
.SS "void KineticLogger_Close (void)"

.PP
Definition at line 55 of file kinetic_logger\&.c\&.
.PP
References FileDesc, and LogToConsole\&.
.SS "void KineticLogger_Log (const char *message)"

.PP
Definition at line 65 of file kinetic_logger\&.c\&.
.PP
References FileDesc, and LogToConsole\&.
.SS "int KineticLogger_LogPrintf (const char *format, \&.\&.\&.)"

.PP
Definition at line 80 of file kinetic_logger\&.c\&.
.PP
References KineticLogger_Log()\&.
.SS "void KineticLogger_LogHeader (const \fBKineticPDUHeader\fP *header)"

.PP
Definition at line 98 of file kinetic_logger\&.c\&.
.PP
References LOG, and LOGF\&.
.SS "void KineticLogger_LogProtobuf (const \fBKineticProto\fP *proto)"

.PP
Definition at line 162 of file kinetic_logger\&.c\&.
.PP
References BYTES_TO_CSTRING, KineticProto_algorithm__descriptor, KineticProto_message_type__descriptor, KineticProto_status_status_code__descriptor, KineticProto_synchronization__descriptor, LOG, LOG_PROTO_INIT, LOG_PROTO_LEVEL_END, LOG_PROTO_LEVEL_START, and LOGF\&.
.SS "void KineticLogger_LogStatus (KineticProto_Status *status)"

.PP
Definition at line 338 of file kinetic_logger\&.c\&.
.PP
References KINETIC_PROTO_STATUS_STATUS_CODE_INVALID_STATUS_CODE, KINETIC_PROTO_STATUS_STATUS_CODE_SUCCESS, and KineticLogger_LogPrintf()\&.
.SS "void KineticLogger_LogByteArray (const char *title, \fBByteArray\fPbytes)"

.PP
Definition at line 397 of file kinetic_logger\&.c\&.
.PP
References LOGF\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for protobuf-c from the source code\&.
