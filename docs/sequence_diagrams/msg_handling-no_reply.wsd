title Kinetic C message handling (w/ response time-out)

parallel {
    Client -> Sender: client enqueues request
    note left of Client: client is blocked
}

Sender -> Listener: hold responses for <FD, SEQ_ID>
activate Sender
activate Listener

Sender -> Drive: send request
activate Drive

Sender -> Client: notify Client

parallel {
    Client -> Client: backpressure

    Sender -> Listener: expect response for <FD, SEQ_ID>
    deactivate Sender
}

parallel {
    note left of Client: client is unblocked
    Listener -> Listener: wait
}

note right of Listener: TIME OUT
deactivate Listener

Listener -> Threadpool: Transfer callback with receive timeout
activate Threadpool

Threadpool -->> Client: callback(receive timeout)
deactivate Threadpool
